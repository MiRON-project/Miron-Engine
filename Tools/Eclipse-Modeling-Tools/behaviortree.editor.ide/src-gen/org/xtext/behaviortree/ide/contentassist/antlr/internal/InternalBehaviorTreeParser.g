/*
 * generated by Xtext 2.12.0
 */
parser grammar InternalBehaviorTreeParser;

options {
	tokenVocab=InternalBehaviorTreeLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package org.xtext.behaviortree.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.behaviortree.services.BehaviorTreeGrammarAccess;

}
@members {
	private BehaviorTreeGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("SolidusGreaterThanSign", "'/>'");
		tokenNameToValue.put("LessThanSignSolidus", "'</'");
		tokenNameToValue.put("Path", "'path'");
		tokenNameToValue.put("Root", "'root'");
		tokenNameToValue.put("Action", "'Action'");
		tokenNameToValue.put("Repeat", "'Repeat'");
		tokenNameToValue.put("Timeout", "'Timeout'");
		tokenNameToValue.put("Include", "'include'");
		tokenNameToValue.put("Fallback", "'Fallback'");
		tokenNameToValue.put("Inverter", "'Inverter'");
		tokenNameToValue.put("Parallel", "'Parallel'");
		tokenNameToValue.put("Sequence", "'Sequence'");
		tokenNameToValue.put("Condition", "'Condition'");
		tokenNameToValue.put("BehaviorTree", "'BehaviorTree'");
		tokenNameToValue.put("FallbackStar", "'FallbackStar'");
		tokenNameToValue.put("ForceFailure", "'ForceFailure'");
		tokenNameToValue.put("ForceSuccess", "'ForceSuccess'");
		tokenNameToValue.put("SequenceStar", "'SequenceStar'");
		tokenNameToValue.put("AlwaysFailure", "'AlwaysFailure'");
		tokenNameToValue.put("AlwaysSuccess", "'AlwaysSuccess'");
		tokenNameToValue.put("SetBlackboard", "'SetBlackboard'");
		tokenNameToValue.put("BlackboardCheckInt", "'BlackboardCheckInt'");
		tokenNameToValue.put("RetryUntilSuccesful", "'RetryUntilSuccesful'");
		tokenNameToValue.put("Main_tree_to_execute", "'main_tree_to_execute'");
		tokenNameToValue.put("BlackboardCheckDouble", "'BlackboardCheckDouble'");
		tokenNameToValue.put("BlackboardCheckString", "'BlackboardCheckString'");
	}

	public void setGrammarAccess(BehaviorTreeGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleBTModel
entryRuleBTModel
:
{ before(grammarAccess.getBTModelRule()); }
	 ruleBTModel
{ after(grammarAccess.getBTModelRule()); } 
	 EOF 
;

// Rule BTModel
ruleBTModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBTModelAccess().getGroup()); }
		(rule__BTModel__Group__0)
		{ after(grammarAccess.getBTModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorTree
entryRuleBehaviorTree
:
{ before(grammarAccess.getBehaviorTreeRule()); }
	 ruleBehaviorTree
{ after(grammarAccess.getBehaviorTreeRule()); } 
	 EOF 
;

// Rule BehaviorTree
ruleBehaviorTree 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorTreeAccess().getGroup()); }
		(rule__BehaviorTree__Group__0)
		{ after(grammarAccess.getBehaviorTreeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTreeNode
entryRuleTreeNode
:
{ before(grammarAccess.getTreeNodeRule()); }
	 ruleTreeNode
{ after(grammarAccess.getTreeNodeRule()); } 
	 EOF 
;

// Rule TreeNode
ruleTreeNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTreeNodeAccess().getAlternatives()); }
		(rule__TreeNode__Alternatives)
		{ after(grammarAccess.getTreeNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubtreeNode
entryRuleSubtreeNode
:
{ before(grammarAccess.getSubtreeNodeRule()); }
	 ruleSubtreeNode
{ after(grammarAccess.getSubtreeNodeRule()); } 
	 EOF 
;

// Rule SubtreeNode
ruleSubtreeNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubtreeNodeAccess().getAlternatives()); }
		(rule__SubtreeNode__Alternatives)
		{ after(grammarAccess.getSubtreeNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubtree
entryRuleSubtree
:
{ before(grammarAccess.getSubtreeRule()); }
	 ruleSubtree
{ after(grammarAccess.getSubtreeRule()); } 
	 EOF 
;

// Rule Subtree
ruleSubtree 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubtreeAccess().getGroup()); }
		(rule__Subtree__Group__0)
		{ after(grammarAccess.getSubtreeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubtreePlus
entryRuleSubtreePlus
:
{ before(grammarAccess.getSubtreePlusRule()); }
	 ruleSubtreePlus
{ after(grammarAccess.getSubtreePlusRule()); } 
	 EOF 
;

// Rule SubtreePlus
ruleSubtreePlus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubtreePlusAccess().getGroup()); }
		(rule__SubtreePlus__Group__0)
		{ after(grammarAccess.getSubtreePlusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleControlNode
entryRuleControlNode
:
{ before(grammarAccess.getControlNodeRule()); }
	 ruleControlNode
{ after(grammarAccess.getControlNodeRule()); } 
	 EOF 
;

// Rule ControlNode
ruleControlNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getControlNodeAccess().getAlternatives()); }
		(rule__ControlNode__Alternatives)
		{ after(grammarAccess.getControlNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequence
entryRuleSequence
:
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceAccess().getGroup()); }
		(rule__Sequence__Group__0)
		{ after(grammarAccess.getSequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceStar
entryRuleSequenceStar
:
{ before(grammarAccess.getSequenceStarRule()); }
	 ruleSequenceStar
{ after(grammarAccess.getSequenceStarRule()); } 
	 EOF 
;

// Rule SequenceStar
ruleSequenceStar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceStarAccess().getGroup()); }
		(rule__SequenceStar__Group__0)
		{ after(grammarAccess.getSequenceStarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFallback
entryRuleFallback
:
{ before(grammarAccess.getFallbackRule()); }
	 ruleFallback
{ after(grammarAccess.getFallbackRule()); } 
	 EOF 
;

// Rule Fallback
ruleFallback 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallbackAccess().getGroup()); }
		(rule__Fallback__Group__0)
		{ after(grammarAccess.getFallbackAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFallbackStar
entryRuleFallbackStar
:
{ before(grammarAccess.getFallbackStarRule()); }
	 ruleFallbackStar
{ after(grammarAccess.getFallbackStarRule()); } 
	 EOF 
;

// Rule FallbackStar
ruleFallbackStar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallbackStarAccess().getGroup()); }
		(rule__FallbackStar__Group__0)
		{ after(grammarAccess.getFallbackStarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParallel
entryRuleParallel
:
{ before(grammarAccess.getParallelRule()); }
	 ruleParallel
{ after(grammarAccess.getParallelRule()); } 
	 EOF 
;

// Rule Parallel
ruleParallel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParallelAccess().getGroup()); }
		(rule__Parallel__Group__0)
		{ after(grammarAccess.getParallelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitch
entryRuleSwitch
:
{ before(grammarAccess.getSwitchRule()); }
	 ruleSwitch
{ after(grammarAccess.getSwitchRule()); } 
	 EOF 
;

// Rule Switch
ruleSwitch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchAccess().getGroup()); }
		(rule__Switch__Group__0)
		{ after(grammarAccess.getSwitchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecoratorNode
entryRuleDecoratorNode
:
{ before(grammarAccess.getDecoratorNodeRule()); }
	 ruleDecoratorNode
{ after(grammarAccess.getDecoratorNodeRule()); } 
	 EOF 
;

// Rule DecoratorNode
ruleDecoratorNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getAlternatives()); }
		(rule__DecoratorNode__Alternatives)
		{ after(grammarAccess.getDecoratorNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForceSuccess
entryRuleForceSuccess
:
{ before(grammarAccess.getForceSuccessRule()); }
	 ruleForceSuccess
{ after(grammarAccess.getForceSuccessRule()); } 
	 EOF 
;

// Rule ForceSuccess
ruleForceSuccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForceSuccessAccess().getGroup()); }
		(rule__ForceSuccess__Group__0)
		{ after(grammarAccess.getForceSuccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForceFailure
entryRuleForceFailure
:
{ before(grammarAccess.getForceFailureRule()); }
	 ruleForceFailure
{ after(grammarAccess.getForceFailureRule()); } 
	 EOF 
;

// Rule ForceFailure
ruleForceFailure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForceFailureAccess().getGroup()); }
		(rule__ForceFailure__Group__0)
		{ after(grammarAccess.getForceFailureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepeat
entryRuleRepeat
:
{ before(grammarAccess.getRepeatRule()); }
	 ruleRepeat
{ after(grammarAccess.getRepeatRule()); } 
	 EOF 
;

// Rule Repeat
ruleRepeat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepeatAccess().getGroup()); }
		(rule__Repeat__Group__0)
		{ after(grammarAccess.getRepeatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInverter
entryRuleInverter
:
{ before(grammarAccess.getInverterRule()); }
	 ruleInverter
{ after(grammarAccess.getInverterRule()); } 
	 EOF 
;

// Rule Inverter
ruleInverter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInverterAccess().getGroup()); }
		(rule__Inverter__Group__0)
		{ after(grammarAccess.getInverterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeout
entryRuleTimeout
:
{ before(grammarAccess.getTimeoutRule()); }
	 ruleTimeout
{ after(grammarAccess.getTimeoutRule()); } 
	 EOF 
;

// Rule Timeout
ruleTimeout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeoutAccess().getGroup()); }
		(rule__Timeout__Group__0)
		{ after(grammarAccess.getTimeoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRetryUntilSuccess
entryRuleRetryUntilSuccess
:
{ before(grammarAccess.getRetryUntilSuccessRule()); }
	 ruleRetryUntilSuccess
{ after(grammarAccess.getRetryUntilSuccessRule()); } 
	 EOF 
;

// Rule RetryUntilSuccess
ruleRetryUntilSuccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRetryUntilSuccessAccess().getGroup()); }
		(rule__RetryUntilSuccess__Group__0)
		{ after(grammarAccess.getRetryUntilSuccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlackboardCheckDouble
entryRuleBlackboardCheckDouble
:
{ before(grammarAccess.getBlackboardCheckDoubleRule()); }
	 ruleBlackboardCheckDouble
{ after(grammarAccess.getBlackboardCheckDoubleRule()); } 
	 EOF 
;

// Rule BlackboardCheckDouble
ruleBlackboardCheckDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlackboardCheckDoubleAccess().getGroup()); }
		(rule__BlackboardCheckDouble__Group__0)
		{ after(grammarAccess.getBlackboardCheckDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlackboardCheckInt
entryRuleBlackboardCheckInt
:
{ before(grammarAccess.getBlackboardCheckIntRule()); }
	 ruleBlackboardCheckInt
{ after(grammarAccess.getBlackboardCheckIntRule()); } 
	 EOF 
;

// Rule BlackboardCheckInt
ruleBlackboardCheckInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlackboardCheckIntAccess().getGroup()); }
		(rule__BlackboardCheckInt__Group__0)
		{ after(grammarAccess.getBlackboardCheckIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlackboardCheckString
entryRuleBlackboardCheckString
:
{ before(grammarAccess.getBlackboardCheckStringRule()); }
	 ruleBlackboardCheckString
{ after(grammarAccess.getBlackboardCheckStringRule()); } 
	 EOF 
;

// Rule BlackboardCheckString
ruleBlackboardCheckString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlackboardCheckStringAccess().getGroup()); }
		(rule__BlackboardCheckString__Group__0)
		{ after(grammarAccess.getBlackboardCheckStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeafNode
entryRuleLeafNode
:
{ before(grammarAccess.getLeafNodeRule()); }
	 ruleLeafNode
{ after(grammarAccess.getLeafNodeRule()); } 
	 EOF 
;

// Rule LeafNode
ruleLeafNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeafNodeAccess().getAlternatives()); }
		(rule__LeafNode__Alternatives)
		{ after(grammarAccess.getLeafNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractAction
entryRuleAbstractAction
:
{ before(grammarAccess.getAbstractActionRule()); }
	 ruleAbstractAction
{ after(grammarAccess.getAbstractActionRule()); } 
	 EOF 
;

// Rule AbstractAction
ruleAbstractAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractActionAccess().getAlternatives()); }
		(rule__AbstractAction__Alternatives)
		{ after(grammarAccess.getAbstractActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlwaysSuccess
entryRuleAlwaysSuccess
:
{ before(grammarAccess.getAlwaysSuccessRule()); }
	 ruleAlwaysSuccess
{ after(grammarAccess.getAlwaysSuccessRule()); } 
	 EOF 
;

// Rule AlwaysSuccess
ruleAlwaysSuccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlwaysSuccessAccess().getGroup()); }
		(rule__AlwaysSuccess__Group__0)
		{ after(grammarAccess.getAlwaysSuccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlwaysFailure
entryRuleAlwaysFailure
:
{ before(grammarAccess.getAlwaysFailureRule()); }
	 ruleAlwaysFailure
{ after(grammarAccess.getAlwaysFailureRule()); } 
	 EOF 
;

// Rule AlwaysFailure
ruleAlwaysFailure 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlwaysFailureAccess().getGroup()); }
		(rule__AlwaysFailure__Group__0)
		{ after(grammarAccess.getAlwaysFailureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetBlackboard
entryRuleSetBlackboard
:
{ before(grammarAccess.getSetBlackboardRule()); }
	 ruleSetBlackboard
{ after(grammarAccess.getSetBlackboardRule()); } 
	 EOF 
;

// Rule SetBlackboard
ruleSetBlackboard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetBlackboardAccess().getGroup()); }
		(rule__SetBlackboard__Group__0)
		{ after(grammarAccess.getSetBlackboardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTreeNodesModel
entryRuleTreeNodesModel
:
{ before(grammarAccess.getTreeNodesModelRule()); }
	 ruleTreeNodesModel
{ after(grammarAccess.getTreeNodesModelRule()); } 
	 EOF 
;

// Rule TreeNodesModel
ruleTreeNodesModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTreeNodesModelAccess().getGroup()); }
		(rule__TreeNodesModel__Group__0)
		{ after(grammarAccess.getTreeNodesModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getDEFINITION_STRINGTerminalRuleCall()); }
		RULE_DEFINITION_STRING
		{ after(grammarAccess.getEStringAccess().getDEFINITION_STRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeNodeAccess().getControlNodeParserRuleCall_0()); }
		ruleControlNode
		{ after(grammarAccess.getTreeNodeAccess().getControlNodeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTreeNodeAccess().getDecoratorNodeParserRuleCall_1()); }
		ruleDecoratorNode
		{ after(grammarAccess.getTreeNodeAccess().getDecoratorNodeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTreeNodeAccess().getLeafNodeParserRuleCall_2()); }
		ruleLeafNode
		{ after(grammarAccess.getTreeNodeAccess().getLeafNodeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTreeNodeAccess().getSubtreeNodeParserRuleCall_3()); }
		ruleSubtreeNode
		{ after(grammarAccess.getTreeNodeAccess().getSubtreeNodeParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreeNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtreeNodeAccess().getSubtreeParserRuleCall_0()); }
		ruleSubtree
		{ after(grammarAccess.getSubtreeNodeAccess().getSubtreeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubtreeNodeAccess().getSubtreePlusParserRuleCall_1()); }
		ruleSubtreePlus
		{ after(grammarAccess.getSubtreeNodeAccess().getSubtreePlusParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControlNodeAccess().getSequenceParserRuleCall_0()); }
		ruleSequence
		{ after(grammarAccess.getControlNodeAccess().getSequenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getControlNodeAccess().getSequenceStarParserRuleCall_1()); }
		ruleSequenceStar
		{ after(grammarAccess.getControlNodeAccess().getSequenceStarParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getControlNodeAccess().getParallelParserRuleCall_2()); }
		ruleParallel
		{ after(grammarAccess.getControlNodeAccess().getParallelParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getControlNodeAccess().getFallbackParserRuleCall_3()); }
		ruleFallback
		{ after(grammarAccess.getControlNodeAccess().getFallbackParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getControlNodeAccess().getFallbackStarParserRuleCall_4()); }
		ruleFallbackStar
		{ after(grammarAccess.getControlNodeAccess().getFallbackStarParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getControlNodeAccess().getSwitchParserRuleCall_5()); }
		ruleSwitch
		{ after(grammarAccess.getControlNodeAccess().getSwitchParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecoratorNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getForceSuccessParserRuleCall_0()); }
		ruleForceSuccess
		{ after(grammarAccess.getDecoratorNodeAccess().getForceSuccessParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getForceFailureParserRuleCall_1()); }
		ruleForceFailure
		{ after(grammarAccess.getDecoratorNodeAccess().getForceFailureParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getRepeatParserRuleCall_2()); }
		ruleRepeat
		{ after(grammarAccess.getDecoratorNodeAccess().getRepeatParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getRetryUntilSuccessParserRuleCall_3()); }
		ruleRetryUntilSuccess
		{ after(grammarAccess.getDecoratorNodeAccess().getRetryUntilSuccessParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getInverterParserRuleCall_4()); }
		ruleInverter
		{ after(grammarAccess.getDecoratorNodeAccess().getInverterParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getTimeoutParserRuleCall_5()); }
		ruleTimeout
		{ after(grammarAccess.getDecoratorNodeAccess().getTimeoutParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getBlackboardCheckDoubleParserRuleCall_6()); }
		ruleBlackboardCheckDouble
		{ after(grammarAccess.getDecoratorNodeAccess().getBlackboardCheckDoubleParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getBlackboardCheckIntParserRuleCall_7()); }
		ruleBlackboardCheckInt
		{ after(grammarAccess.getDecoratorNodeAccess().getBlackboardCheckIntParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getDecoratorNodeAccess().getBlackboardCheckStringParserRuleCall_8()); }
		ruleBlackboardCheckString
		{ after(grammarAccess.getDecoratorNodeAccess().getBlackboardCheckStringParserRuleCall_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeafNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeafNodeAccess().getAbstractActionParserRuleCall_0()); }
		ruleAbstractAction
		{ after(grammarAccess.getLeafNodeAccess().getAbstractActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLeafNodeAccess().getConditionParserRuleCall_1()); }
		ruleCondition
		{ after(grammarAccess.getLeafNodeAccess().getConditionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractActionAccess().getAlwaysSuccessParserRuleCall_0()); }
		ruleAlwaysSuccess
		{ after(grammarAccess.getAbstractActionAccess().getAlwaysSuccessParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractActionAccess().getAlwaysFailureParserRuleCall_1()); }
		ruleAlwaysFailure
		{ after(grammarAccess.getAbstractActionAccess().getAlwaysFailureParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractActionAccess().getSetBlackboardParserRuleCall_2()); }
		ruleSetBlackboard
		{ after(grammarAccess.getAbstractActionAccess().getSetBlackboardParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractActionAccess().getActionParserRuleCall_3()); }
		ruleAction
		{ after(grammarAccess.getAbstractActionAccess().getActionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__0__Impl
	rule__BTModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getLessThanSignKeyword_0()); }
	LessThanSign
	{ after(grammarAccess.getBTModelAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__1__Impl
	rule__BTModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getRootKeyword_1()); }
	Root
	{ after(grammarAccess.getBTModelAccess().getRootKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__2__Impl
	rule__BTModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getMain_tree_to_executeKeyword_2()); }
	Main_tree_to_execute
	{ after(grammarAccess.getBTModelAccess().getMain_tree_to_executeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__3__Impl
	rule__BTModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getEqualsSignKeyword_3()); }
	EqualsSign
	{ after(grammarAccess.getBTModelAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__4__Impl
	rule__BTModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getMain_tree_to_executeAssignment_4()); }
	(rule__BTModel__Main_tree_to_executeAssignment_4)
	{ after(grammarAccess.getBTModelAccess().getMain_tree_to_executeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__5__Impl
	rule__BTModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getGreaterThanSignKeyword_5()); }
	GreaterThanSign
	{ after(grammarAccess.getBTModelAccess().getGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__6__Impl
	rule__BTModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getImportsAssignment_6()); }
	(rule__BTModel__ImportsAssignment_6)*
	{ after(grammarAccess.getBTModelAccess().getImportsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__7__Impl
	rule__BTModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getUnorderedGroup_7()); }
	(rule__BTModel__UnorderedGroup_7)
	{ after(grammarAccess.getBTModelAccess().getUnorderedGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__8__Impl
	rule__BTModel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getLessThanSignSolidusKeyword_8()); }
	LessThanSignSolidus
	{ after(grammarAccess.getBTModelAccess().getLessThanSignSolidusKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__9__Impl
	rule__BTModel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getRootKeyword_9()); }
	Root
	{ after(grammarAccess.getBTModelAccess().getRootKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBTModelAccess().getGreaterThanSignKeyword_10()); }
	GreaterThanSign
	{ after(grammarAccess.getBTModelAccess().getGreaterThanSignKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getLessThanSignKeyword_0()); }
	LessThanSign
	{ after(grammarAccess.getImportAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getIncludeKeyword_1()); }
	Include
	{ after(grammarAccess.getImportAccess().getIncludeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getPathKeyword_2()); }
	Path
	{ after(grammarAccess.getImportAccess().getPathKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
	rule__Import__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getEqualsSignKeyword_3()); }
	EqualsSign
	{ after(grammarAccess.getImportAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__4__Impl
	rule__Import__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_4()); }
	(rule__Import__ImportURIAssignment_4)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getSolidusGreaterThanSignKeyword_5()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getImportAccess().getSolidusGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorTree__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__0__Impl
	rule__BehaviorTree__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTreeAccess().getLessThanSignKeyword_0()); }
	LessThanSign
	{ after(grammarAccess.getBehaviorTreeAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__1__Impl
	rule__BehaviorTree__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTreeAccess().getBehaviorTreeKeyword_1()); }
	BehaviorTree
	{ after(grammarAccess.getBehaviorTreeAccess().getBehaviorTreeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__2__Impl
	rule__BehaviorTree__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTreeAccess().getAttributesAssignment_2()); }
	(rule__BehaviorTree__AttributesAssignment_2)*
	{ after(grammarAccess.getBehaviorTreeAccess().getAttributesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__3__Impl
	rule__BehaviorTree__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTreeAccess().getGreaterThanSignKeyword_3()); }
	GreaterThanSign
	{ after(grammarAccess.getBehaviorTreeAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__4__Impl
	rule__BehaviorTree__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBehaviorTreeAccess().getNodesAssignment_4()); }
		(rule__BehaviorTree__NodesAssignment_4)
		{ after(grammarAccess.getBehaviorTreeAccess().getNodesAssignment_4()); }
	)
	(
		{ before(grammarAccess.getBehaviorTreeAccess().getNodesAssignment_4()); }
		(rule__BehaviorTree__NodesAssignment_4)*
		{ after(grammarAccess.getBehaviorTreeAccess().getNodesAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__5__Impl
	rule__BehaviorTree__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTreeAccess().getLessThanSignSolidusKeyword_5()); }
	LessThanSignSolidus
	{ after(grammarAccess.getBehaviorTreeAccess().getLessThanSignSolidusKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__6__Impl
	rule__BehaviorTree__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTreeAccess().getBehaviorTreeKeyword_6()); }
	BehaviorTree
	{ after(grammarAccess.getBehaviorTreeAccess().getBehaviorTreeKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTree__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTreeAccess().getGreaterThanSignKeyword_7()); }
	GreaterThanSign
	{ after(grammarAccess.getBehaviorTreeAccess().getGreaterThanSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
	(rule__Attribute__NameAssignment_0)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1()); }
	EqualsSign
	{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
	(rule__Attribute__ValueAssignment_2)
	{ after(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subtree__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subtree__Group__0__Impl
	rule__Subtree__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreeAccess().getSubtreeAction_0()); }
	()
	{ after(grammarAccess.getSubtreeAccess().getSubtreeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subtree__Group__1__Impl
	rule__Subtree__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreeAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getSubtreeAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subtree__Group__2__Impl
	rule__Subtree__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreeAccess().getSUBTREE_KEYWORDTerminalRuleCall_2()); }
	RULE_SUBTREE_KEYWORD
	{ after(grammarAccess.getSubtreeAccess().getSUBTREE_KEYWORDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subtree__Group__3__Impl
	rule__Subtree__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreeAccess().getEqualsSignKeyword_3()); }
	EqualsSign
	{ after(grammarAccess.getSubtreeAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subtree__Group__4__Impl
	rule__Subtree__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreeAccess().getBehaviortreeAssignment_4()); }
	(rule__Subtree__BehaviortreeAssignment_4)
	{ after(grammarAccess.getSubtreeAccess().getBehaviortreeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subtree__Group__5__Impl
	rule__Subtree__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreeAccess().getAttributesAssignment_5()); }
	(rule__Subtree__AttributesAssignment_5)*
	{ after(grammarAccess.getSubtreeAccess().getAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subtree__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreeAccess().getSolidusGreaterThanSignKeyword_6()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getSubtreeAccess().getSolidusGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubtreePlus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtreePlus__Group__0__Impl
	rule__SubtreePlus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreePlusAccess().getSubtreePlusAction_0()); }
	()
	{ after(grammarAccess.getSubtreePlusAccess().getSubtreePlusAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtreePlus__Group__1__Impl
	rule__SubtreePlus__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreePlusAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getSubtreePlusAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtreePlus__Group__2__Impl
	rule__SubtreePlus__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreePlusAccess().getSUBTREEWRAPPER_KEYWORDTerminalRuleCall_2()); }
	RULE_SUBTREEWRAPPER_KEYWORD
	{ after(grammarAccess.getSubtreePlusAccess().getSUBTREEWRAPPER_KEYWORDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtreePlus__Group__3__Impl
	rule__SubtreePlus__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreePlusAccess().getEqualsSignKeyword_3()); }
	EqualsSign
	{ after(grammarAccess.getSubtreePlusAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtreePlus__Group__4__Impl
	rule__SubtreePlus__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreePlusAccess().getBehaviortreeAssignment_4()); }
	(rule__SubtreePlus__BehaviortreeAssignment_4)
	{ after(grammarAccess.getSubtreePlusAccess().getBehaviortreeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtreePlus__Group__5__Impl
	rule__SubtreePlus__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreePlusAccess().getAttributesAssignment_5()); }
	(rule__SubtreePlus__AttributesAssignment_5)*
	{ after(grammarAccess.getSubtreePlusAccess().getAttributesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubtreePlus__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubtreePlusAccess().getSolidusGreaterThanSignKeyword_6()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getSubtreePlusAccess().getSolidusGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__0__Impl
	rule__Sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getSequenceAction_0()); }
	()
	{ after(grammarAccess.getSequenceAccess().getSequenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__1__Impl
	rule__Sequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getSequenceAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__2__Impl
	rule__Sequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getSequenceKeyword_2()); }
	Sequence
	{ after(grammarAccess.getSequenceAccess().getSequenceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__3__Impl
	rule__Sequence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getAttributesAssignment_3()); }
	(rule__Sequence__AttributesAssignment_3)*
	{ after(grammarAccess.getSequenceAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__4__Impl
	rule__Sequence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getSequenceAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__5__Impl
	rule__Sequence__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSequenceAccess().getNodesAssignment_5()); }
		(rule__Sequence__NodesAssignment_5)
		{ after(grammarAccess.getSequenceAccess().getNodesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getSequenceAccess().getNodesAssignment_5()); }
		(rule__Sequence__NodesAssignment_5)*
		{ after(grammarAccess.getSequenceAccess().getNodesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__6__Impl
	rule__Sequence__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getSequenceAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__7__Impl
	rule__Sequence__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getSequenceKeyword_7()); }
	Sequence
	{ after(grammarAccess.getSequenceAccess().getSequenceKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sequence__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getSequenceAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceStar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__0__Impl
	rule__SequenceStar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getSequenceStarAction_0()); }
	()
	{ after(grammarAccess.getSequenceStarAccess().getSequenceStarAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__1__Impl
	rule__SequenceStar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getSequenceStarAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__2__Impl
	rule__SequenceStar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getSequenceStarKeyword_2()); }
	SequenceStar
	{ after(grammarAccess.getSequenceStarAccess().getSequenceStarKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__3__Impl
	rule__SequenceStar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getAttributesAssignment_3()); }
	(rule__SequenceStar__AttributesAssignment_3)*
	{ after(grammarAccess.getSequenceStarAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__4__Impl
	rule__SequenceStar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getSequenceStarAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__5__Impl
	rule__SequenceStar__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSequenceStarAccess().getNodesAssignment_5()); }
		(rule__SequenceStar__NodesAssignment_5)
		{ after(grammarAccess.getSequenceStarAccess().getNodesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getSequenceStarAccess().getNodesAssignment_5()); }
		(rule__SequenceStar__NodesAssignment_5)*
		{ after(grammarAccess.getSequenceStarAccess().getNodesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__6__Impl
	rule__SequenceStar__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getSequenceStarAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__7__Impl
	rule__SequenceStar__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getSequenceStarKeyword_7()); }
	SequenceStar
	{ after(grammarAccess.getSequenceStarAccess().getSequenceStarKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceStar__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceStarAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getSequenceStarAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fallback__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__0__Impl
	rule__Fallback__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getFallbackAction_0()); }
	()
	{ after(grammarAccess.getFallbackAccess().getFallbackAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__1__Impl
	rule__Fallback__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getFallbackAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__2__Impl
	rule__Fallback__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getFallbackKeyword_2()); }
	Fallback
	{ after(grammarAccess.getFallbackAccess().getFallbackKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__3__Impl
	rule__Fallback__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getAttributesAssignment_3()); }
	(rule__Fallback__AttributesAssignment_3)*
	{ after(grammarAccess.getFallbackAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__4__Impl
	rule__Fallback__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getFallbackAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__5__Impl
	rule__Fallback__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFallbackAccess().getNodesAssignment_5()); }
		(rule__Fallback__NodesAssignment_5)
		{ after(grammarAccess.getFallbackAccess().getNodesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getFallbackAccess().getNodesAssignment_5()); }
		(rule__Fallback__NodesAssignment_5)*
		{ after(grammarAccess.getFallbackAccess().getNodesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__6__Impl
	rule__Fallback__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getFallbackAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__7__Impl
	rule__Fallback__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getFallbackKeyword_7()); }
	Fallback
	{ after(grammarAccess.getFallbackAccess().getFallbackKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fallback__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getFallbackAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FallbackStar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__0__Impl
	rule__FallbackStar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getFallbackStarAction_0()); }
	()
	{ after(grammarAccess.getFallbackStarAccess().getFallbackStarAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__1__Impl
	rule__FallbackStar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getFallbackStarAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__2__Impl
	rule__FallbackStar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getFallbackStarKeyword_2()); }
	FallbackStar
	{ after(grammarAccess.getFallbackStarAccess().getFallbackStarKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__3__Impl
	rule__FallbackStar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getAttributesAssignment_3()); }
	(rule__FallbackStar__AttributesAssignment_3)*
	{ after(grammarAccess.getFallbackStarAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__4__Impl
	rule__FallbackStar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getFallbackStarAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__5__Impl
	rule__FallbackStar__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFallbackStarAccess().getNodesAssignment_5()); }
		(rule__FallbackStar__NodesAssignment_5)
		{ after(grammarAccess.getFallbackStarAccess().getNodesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getFallbackStarAccess().getNodesAssignment_5()); }
		(rule__FallbackStar__NodesAssignment_5)*
		{ after(grammarAccess.getFallbackStarAccess().getNodesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__6__Impl
	rule__FallbackStar__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getFallbackStarAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__7__Impl
	rule__FallbackStar__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getFallbackStarKeyword_7()); }
	FallbackStar
	{ after(grammarAccess.getFallbackStarAccess().getFallbackStarKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallbackStar__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallbackStarAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getFallbackStarAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parallel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__0__Impl
	rule__Parallel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getParallelAction_0()); }
	()
	{ after(grammarAccess.getParallelAccess().getParallelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__1__Impl
	rule__Parallel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getParallelAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__2__Impl
	rule__Parallel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getParallelKeyword_2()); }
	Parallel
	{ after(grammarAccess.getParallelAccess().getParallelKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__3__Impl
	rule__Parallel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getAttributesAssignment_3()); }
	(rule__Parallel__AttributesAssignment_3)*
	{ after(grammarAccess.getParallelAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__4__Impl
	rule__Parallel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getParallelAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__5__Impl
	rule__Parallel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParallelAccess().getNodesAssignment_5()); }
		(rule__Parallel__NodesAssignment_5)
		{ after(grammarAccess.getParallelAccess().getNodesAssignment_5()); }
	)
	(
		{ before(grammarAccess.getParallelAccess().getNodesAssignment_5()); }
		(rule__Parallel__NodesAssignment_5)*
		{ after(grammarAccess.getParallelAccess().getNodesAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__6__Impl
	rule__Parallel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getParallelAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__7__Impl
	rule__Parallel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getParallelKeyword_7()); }
	Parallel
	{ after(grammarAccess.getParallelAccess().getParallelKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parallel__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParallelAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getParallelAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__0__Impl
	rule__Switch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getSwitchAction_0()); }
	()
	{ after(grammarAccess.getSwitchAccess().getSwitchAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__1__Impl
	rule__Switch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getSwitchAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__2__Impl
	rule__Switch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getSWITCH_KEYWORDTerminalRuleCall_2()); }
	RULE_SWITCH_KEYWORD
	{ after(grammarAccess.getSwitchAccess().getSWITCH_KEYWORDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__3__Impl
	rule__Switch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getAttributesAssignment_3()); }
	(rule__Switch__AttributesAssignment_3)*
	{ after(grammarAccess.getSwitchAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__4__Impl
	rule__Switch__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getSwitchAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__5__Impl
	rule__Switch__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getNodesAssignment_5()); }
	(rule__Switch__NodesAssignment_5)*
	{ after(grammarAccess.getSwitchAccess().getNodesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__6__Impl
	rule__Switch__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getSwitchAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__7__Impl
	rule__Switch__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getSWITCH_KEYWORDTerminalRuleCall_7()); }
	RULE_SWITCH_KEYWORD
	{ after(grammarAccess.getSwitchAccess().getSWITCH_KEYWORDTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Switch__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getSwitchAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForceSuccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__0__Impl
	rule__ForceSuccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getForceSuccessAction_0()); }
	()
	{ after(grammarAccess.getForceSuccessAccess().getForceSuccessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__1__Impl
	rule__ForceSuccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getForceSuccessAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__2__Impl
	rule__ForceSuccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getForceSuccessKeyword_2()); }
	ForceSuccess
	{ after(grammarAccess.getForceSuccessAccess().getForceSuccessKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__3__Impl
	rule__ForceSuccess__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getAttributesAssignment_3()); }
	(rule__ForceSuccess__AttributesAssignment_3)*
	{ after(grammarAccess.getForceSuccessAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__4__Impl
	rule__ForceSuccess__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getForceSuccessAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__5__Impl
	rule__ForceSuccess__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getNodeAssignment_5()); }
	(rule__ForceSuccess__NodeAssignment_5)
	{ after(grammarAccess.getForceSuccessAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__6__Impl
	rule__ForceSuccess__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getForceSuccessAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__7__Impl
	rule__ForceSuccess__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getForceSuccessKeyword_7()); }
	ForceSuccess
	{ after(grammarAccess.getForceSuccessAccess().getForceSuccessKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceSuccess__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceSuccessAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getForceSuccessAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForceFailure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__0__Impl
	rule__ForceFailure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getForceFailureAction_0()); }
	()
	{ after(grammarAccess.getForceFailureAccess().getForceFailureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__1__Impl
	rule__ForceFailure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getForceFailureAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__2__Impl
	rule__ForceFailure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getForceFailureKeyword_2()); }
	ForceFailure
	{ after(grammarAccess.getForceFailureAccess().getForceFailureKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__3__Impl
	rule__ForceFailure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getAttributesAssignment_3()); }
	(rule__ForceFailure__AttributesAssignment_3)*
	{ after(grammarAccess.getForceFailureAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__4__Impl
	rule__ForceFailure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getForceFailureAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__5__Impl
	rule__ForceFailure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getNodeAssignment_5()); }
	(rule__ForceFailure__NodeAssignment_5)
	{ after(grammarAccess.getForceFailureAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__6__Impl
	rule__ForceFailure__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getForceFailureAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__7__Impl
	rule__ForceFailure__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getForceFailureKeyword_7()); }
	ForceFailure
	{ after(grammarAccess.getForceFailureAccess().getForceFailureKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForceFailure__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForceFailureAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getForceFailureAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__0__Impl
	rule__Repeat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getRepeatAction_0()); }
	()
	{ after(grammarAccess.getRepeatAccess().getRepeatAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__1__Impl
	rule__Repeat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getRepeatAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__2__Impl
	rule__Repeat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_2()); }
	Repeat
	{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__3__Impl
	rule__Repeat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getAttributesAssignment_3()); }
	(rule__Repeat__AttributesAssignment_3)*
	{ after(grammarAccess.getRepeatAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__4__Impl
	rule__Repeat__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getRepeatAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__5__Impl
	rule__Repeat__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getNodeAssignment_5()); }
	(rule__Repeat__NodeAssignment_5)
	{ after(grammarAccess.getRepeatAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__6__Impl
	rule__Repeat__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getRepeatAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__7__Impl
	rule__Repeat__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_7()); }
	Repeat
	{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Repeat__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getRepeatAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inverter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__0__Impl
	rule__Inverter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getInverterAction_0()); }
	()
	{ after(grammarAccess.getInverterAccess().getInverterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__1__Impl
	rule__Inverter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getInverterAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__2__Impl
	rule__Inverter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getInverterKeyword_2()); }
	Inverter
	{ after(grammarAccess.getInverterAccess().getInverterKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__3__Impl
	rule__Inverter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getAttributesAssignment_3()); }
	(rule__Inverter__AttributesAssignment_3)*
	{ after(grammarAccess.getInverterAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__4__Impl
	rule__Inverter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getInverterAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__5__Impl
	rule__Inverter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getNodeAssignment_5()); }
	(rule__Inverter__NodeAssignment_5)
	{ after(grammarAccess.getInverterAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__6__Impl
	rule__Inverter__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getInverterAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__7__Impl
	rule__Inverter__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getInverterKeyword_7()); }
	Inverter
	{ after(grammarAccess.getInverterAccess().getInverterKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inverter__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInverterAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getInverterAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Timeout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__0__Impl
	rule__Timeout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getTimeoutAction_0()); }
	()
	{ after(grammarAccess.getTimeoutAccess().getTimeoutAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__1__Impl
	rule__Timeout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getTimeoutAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__2__Impl
	rule__Timeout__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getTimeoutKeyword_2()); }
	Timeout
	{ after(grammarAccess.getTimeoutAccess().getTimeoutKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__3__Impl
	rule__Timeout__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getAttributesAssignment_3()); }
	(rule__Timeout__AttributesAssignment_3)*
	{ after(grammarAccess.getTimeoutAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__4__Impl
	rule__Timeout__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getTimeoutAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__5__Impl
	rule__Timeout__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getNodeAssignment_5()); }
	(rule__Timeout__NodeAssignment_5)
	{ after(grammarAccess.getTimeoutAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__6__Impl
	rule__Timeout__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getTimeoutAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__7__Impl
	rule__Timeout__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getTimeoutKeyword_7()); }
	Timeout
	{ after(grammarAccess.getTimeoutAccess().getTimeoutKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Timeout__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getTimeoutAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RetryUntilSuccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__0__Impl
	rule__RetryUntilSuccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getRetryUntilSuccessAction_0()); }
	()
	{ after(grammarAccess.getRetryUntilSuccessAccess().getRetryUntilSuccessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__1__Impl
	rule__RetryUntilSuccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getRetryUntilSuccessAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__2__Impl
	rule__RetryUntilSuccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getRetryUntilSuccesfulKeyword_2()); }
	RetryUntilSuccesful
	{ after(grammarAccess.getRetryUntilSuccessAccess().getRetryUntilSuccesfulKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__3__Impl
	rule__RetryUntilSuccess__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getAttributesAssignment_3()); }
	(rule__RetryUntilSuccess__AttributesAssignment_3)*
	{ after(grammarAccess.getRetryUntilSuccessAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__4__Impl
	rule__RetryUntilSuccess__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getRetryUntilSuccessAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__5__Impl
	rule__RetryUntilSuccess__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getNodeAssignment_5()); }
	(rule__RetryUntilSuccess__NodeAssignment_5)
	{ after(grammarAccess.getRetryUntilSuccessAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__6__Impl
	rule__RetryUntilSuccess__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getRetryUntilSuccessAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__7__Impl
	rule__RetryUntilSuccess__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getRetryUntilSuccesfulKeyword_7()); }
	RetryUntilSuccesful
	{ after(grammarAccess.getRetryUntilSuccessAccess().getRetryUntilSuccesfulKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RetryUntilSuccess__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRetryUntilSuccessAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getRetryUntilSuccessAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlackboardCheckDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__0__Impl
	rule__BlackboardCheckDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getBlackboardCheckDoubleAction_0()); }
	()
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getBlackboardCheckDoubleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__1__Impl
	rule__BlackboardCheckDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__2__Impl
	rule__BlackboardCheckDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getBlackboardCheckDoubleKeyword_2()); }
	BlackboardCheckDouble
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getBlackboardCheckDoubleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__3__Impl
	rule__BlackboardCheckDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getAttributesAssignment_3()); }
	(rule__BlackboardCheckDouble__AttributesAssignment_3)*
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__4__Impl
	rule__BlackboardCheckDouble__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__5__Impl
	rule__BlackboardCheckDouble__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getNodeAssignment_5()); }
	(rule__BlackboardCheckDouble__NodeAssignment_5)
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__6__Impl
	rule__BlackboardCheckDouble__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__7__Impl
	rule__BlackboardCheckDouble__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getBlackboardCheckDoubleKeyword_7()); }
	BlackboardCheckDouble
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getBlackboardCheckDoubleKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckDouble__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckDoubleAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getBlackboardCheckDoubleAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlackboardCheckInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__0__Impl
	rule__BlackboardCheckInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getBlackboardCheckIntAction_0()); }
	()
	{ after(grammarAccess.getBlackboardCheckIntAccess().getBlackboardCheckIntAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__1__Impl
	rule__BlackboardCheckInt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getBlackboardCheckIntAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__2__Impl
	rule__BlackboardCheckInt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getBlackboardCheckIntKeyword_2()); }
	BlackboardCheckInt
	{ after(grammarAccess.getBlackboardCheckIntAccess().getBlackboardCheckIntKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__3__Impl
	rule__BlackboardCheckInt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getAttributesAssignment_3()); }
	(rule__BlackboardCheckInt__AttributesAssignment_3)*
	{ after(grammarAccess.getBlackboardCheckIntAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__4__Impl
	rule__BlackboardCheckInt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getBlackboardCheckIntAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__5__Impl
	rule__BlackboardCheckInt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getNodeAssignment_5()); }
	(rule__BlackboardCheckInt__NodeAssignment_5)
	{ after(grammarAccess.getBlackboardCheckIntAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__6__Impl
	rule__BlackboardCheckInt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getBlackboardCheckIntAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__7__Impl
	rule__BlackboardCheckInt__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getBlackboardCheckIntKeyword_7()); }
	BlackboardCheckInt
	{ after(grammarAccess.getBlackboardCheckIntAccess().getBlackboardCheckIntKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckInt__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckIntAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getBlackboardCheckIntAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlackboardCheckString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__0__Impl
	rule__BlackboardCheckString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getBlackboardCheckStringAction_0()); }
	()
	{ after(grammarAccess.getBlackboardCheckStringAccess().getBlackboardCheckStringAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__1__Impl
	rule__BlackboardCheckString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getBlackboardCheckStringAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__2__Impl
	rule__BlackboardCheckString__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getBlackboardCheckStringKeyword_2()); }
	BlackboardCheckString
	{ after(grammarAccess.getBlackboardCheckStringAccess().getBlackboardCheckStringKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__3__Impl
	rule__BlackboardCheckString__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getAttributesAssignment_3()); }
	(rule__BlackboardCheckString__AttributesAssignment_3)*
	{ after(grammarAccess.getBlackboardCheckStringAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__4__Impl
	rule__BlackboardCheckString__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getGreaterThanSignKeyword_4()); }
	GreaterThanSign
	{ after(grammarAccess.getBlackboardCheckStringAccess().getGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__5__Impl
	rule__BlackboardCheckString__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getNodeAssignment_5()); }
	(rule__BlackboardCheckString__NodeAssignment_5)
	{ after(grammarAccess.getBlackboardCheckStringAccess().getNodeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__6__Impl
	rule__BlackboardCheckString__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getLessThanSignSolidusKeyword_6()); }
	LessThanSignSolidus
	{ after(grammarAccess.getBlackboardCheckStringAccess().getLessThanSignSolidusKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__7__Impl
	rule__BlackboardCheckString__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getBlackboardCheckStringKeyword_7()); }
	BlackboardCheckString
	{ after(grammarAccess.getBlackboardCheckStringAccess().getBlackboardCheckStringKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlackboardCheckString__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlackboardCheckStringAccess().getGreaterThanSignKeyword_8()); }
	GreaterThanSign
	{ after(grammarAccess.getBlackboardCheckStringAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionAction_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getConditionAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionKeyword_2()); }
	Condition
	{ after(grammarAccess.getConditionAccess().getConditionKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
	rule__Condition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAttributesAssignment_3()); }
	(rule__Condition__AttributesAssignment_3)*
	{ after(grammarAccess.getConditionAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getSolidusGreaterThanSignKeyword_4()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getConditionAccess().getSolidusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysSuccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysSuccess__Group__0__Impl
	rule__AlwaysSuccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysSuccessAccess().getAlwaysSuccessAction_0()); }
	()
	{ after(grammarAccess.getAlwaysSuccessAccess().getAlwaysSuccessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysSuccess__Group__1__Impl
	rule__AlwaysSuccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysSuccessAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getAlwaysSuccessAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysSuccess__Group__2__Impl
	rule__AlwaysSuccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysSuccessAccess().getAlwaysSuccessKeyword_2()); }
	AlwaysSuccess
	{ after(grammarAccess.getAlwaysSuccessAccess().getAlwaysSuccessKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysSuccess__Group__3__Impl
	rule__AlwaysSuccess__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysSuccessAccess().getAttributesAssignment_3()); }
	(rule__AlwaysSuccess__AttributesAssignment_3)*
	{ after(grammarAccess.getAlwaysSuccessAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysSuccess__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysSuccessAccess().getSolidusGreaterThanSignKeyword_4()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getAlwaysSuccessAccess().getSolidusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AlwaysFailure__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysFailure__Group__0__Impl
	rule__AlwaysFailure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysFailureAccess().getAlwaysFailureAction_0()); }
	()
	{ after(grammarAccess.getAlwaysFailureAccess().getAlwaysFailureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysFailure__Group__1__Impl
	rule__AlwaysFailure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysFailureAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getAlwaysFailureAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysFailure__Group__2__Impl
	rule__AlwaysFailure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysFailureAccess().getAlwaysFailureKeyword_2()); }
	AlwaysFailure
	{ after(grammarAccess.getAlwaysFailureAccess().getAlwaysFailureKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysFailure__Group__3__Impl
	rule__AlwaysFailure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysFailureAccess().getAttributesAssignment_3()); }
	(rule__AlwaysFailure__AttributesAssignment_3)*
	{ after(grammarAccess.getAlwaysFailureAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AlwaysFailure__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlwaysFailureAccess().getSolidusGreaterThanSignKeyword_4()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getAlwaysFailureAccess().getSolidusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetBlackboard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetBlackboard__Group__0__Impl
	rule__SetBlackboard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetBlackboardAccess().getSetBlackboardAction_0()); }
	()
	{ after(grammarAccess.getSetBlackboardAccess().getSetBlackboardAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetBlackboard__Group__1__Impl
	rule__SetBlackboard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetBlackboardAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getSetBlackboardAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetBlackboard__Group__2__Impl
	rule__SetBlackboard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetBlackboardAccess().getSetBlackboardKeyword_2()); }
	SetBlackboard
	{ after(grammarAccess.getSetBlackboardAccess().getSetBlackboardKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetBlackboard__Group__3__Impl
	rule__SetBlackboard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetBlackboardAccess().getAttributesAssignment_3()); }
	(rule__SetBlackboard__AttributesAssignment_3)*
	{ after(grammarAccess.getSetBlackboardAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetBlackboard__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetBlackboardAccess().getSolidusGreaterThanSignKeyword_4()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getSetBlackboardAccess().getSolidusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionAction_0()); }
	()
	{ after(grammarAccess.getActionAccess().getActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLessThanSignKeyword_1()); }
	LessThanSign
	{ after(grammarAccess.getActionAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionKeyword_2()); }
	Action
	{ after(grammarAccess.getActionAccess().getActionKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getAttributesAssignment_3()); }
	(rule__Action__AttributesAssignment_3)*
	{ after(grammarAccess.getActionAccess().getAttributesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getSolidusGreaterThanSignKeyword_4()); }
	SolidusGreaterThanSign
	{ after(grammarAccess.getActionAccess().getSolidusGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TreeNodesModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNodesModel__Group__0__Impl
	rule__TreeNodesModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNodesModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodesModelAccess().getTreeNodesModelAction_0()); }
	()
	{ after(grammarAccess.getTreeNodesModelAccess().getTreeNodesModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNodesModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TreeNodesModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNodesModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeNodesModelAccess().getContentAssignment_1()); }
	(rule__TreeNodesModel__ContentAssignment_1)
	{ after(grammarAccess.getTreeNodesModelAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BTModel__UnorderedGroup_7
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getBTModelAccess().getUnorderedGroup_7());
	}
:
	rule__BTModel__UnorderedGroup_7__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getBTModelAccess().getUnorderedGroup_7())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getBTModelAccess().getUnorderedGroup_7());
	restoreStackSize(stackSize);
}

rule__BTModel__UnorderedGroup_7__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBTModelAccess().getUnorderedGroup_7(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBTModelAccess().getUnorderedGroup_7(), 0);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getBTModelAccess().getTreesAssignment_7_0()); }
						(rule__BTModel__TreesAssignment_7_0)
						{ after(grammarAccess.getBTModelAccess().getTreesAssignment_7_0()); }
					)
					(
						{ before(grammarAccess.getBTModelAccess().getTreesAssignment_7_0()); }
						((rule__BTModel__TreesAssignment_7_0)=>rule__BTModel__TreesAssignment_7_0)*
						{ after(grammarAccess.getBTModelAccess().getTreesAssignment_7_0()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getBTModelAccess().getUnorderedGroup_7(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getBTModelAccess().getUnorderedGroup_7(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getBTModelAccess().getNodesmodelAssignment_7_1()); }
					(rule__BTModel__NodesmodelAssignment_7_1)
					{ after(grammarAccess.getBTModelAccess().getNodesmodelAssignment_7_1()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBTModelAccess().getUnorderedGroup_7());
	restoreStackSize(stackSize);
}

rule__BTModel__UnorderedGroup_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__UnorderedGroup_7__Impl
	rule__BTModel__UnorderedGroup_7__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__UnorderedGroup_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BTModel__UnorderedGroup_7__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__BTModel__Main_tree_to_executeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTModelAccess().getMain_tree_to_executeBehaviorTreeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getBTModelAccess().getMain_tree_to_executeBehaviorTreeSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getBTModelAccess().getMain_tree_to_executeBehaviorTreeSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getBTModelAccess().getMain_tree_to_executeBehaviorTreeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__ImportsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTModelAccess().getImportsImportParserRuleCall_6_0()); }
		ruleImport
		{ after(grammarAccess.getBTModelAccess().getImportsImportParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__TreesAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTModelAccess().getTreesBehaviorTreeParserRuleCall_7_0_0()); }
		ruleBehaviorTree
		{ after(grammarAccess.getBTModelAccess().getTreesBehaviorTreeParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BTModel__NodesmodelAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBTModelAccess().getNodesmodelTreeNodesModelParserRuleCall_7_1_0()); }
		ruleTreeNodesModel
		{ after(grammarAccess.getBTModelAccess().getNodesmodelTreeNodesModelParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__AttributesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTreeAccess().getAttributesAttributeParserRuleCall_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getBehaviorTreeAccess().getAttributesAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTree__NodesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTreeAccess().getNodesTreeNodeParserRuleCall_4_0()); }
		ruleTreeNode
		{ after(grammarAccess.getBehaviorTreeAccess().getNodesTreeNodeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__BehaviortreeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtreeAccess().getBehaviortreeBehaviorTreeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSubtreeAccess().getBehaviortreeBehaviorTreeSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getSubtreeAccess().getBehaviortreeBehaviorTreeSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSubtreeAccess().getBehaviortreeBehaviorTreeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subtree__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtreeAccess().getAttributesAttributeParserRuleCall_5_0()); }
		ruleAttribute
		{ after(grammarAccess.getSubtreeAccess().getAttributesAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__BehaviortreeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtreePlusAccess().getBehaviortreeBehaviorTreeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getSubtreePlusAccess().getBehaviortreeBehaviorTreeSTRINGTerminalRuleCall_4_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getSubtreePlusAccess().getBehaviortreeBehaviorTreeSTRINGTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getSubtreePlusAccess().getBehaviortreeBehaviorTreeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubtreePlus__AttributesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubtreePlusAccess().getAttributesAttributeParserRuleCall_5_0()); }
		ruleAttribute
		{ after(grammarAccess.getSubtreePlusAccess().getAttributesAttributeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getSequenceAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__NodesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceAccess().getNodesTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getSequenceAccess().getNodesTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceStarAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getSequenceStarAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceStar__NodesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceStarAccess().getNodesTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getSequenceStarAccess().getNodesTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFallbackAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getFallbackAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fallback__NodesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFallbackAccess().getNodesTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getFallbackAccess().getNodesTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFallbackStarAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getFallbackStarAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallbackStar__NodesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFallbackStarAccess().getNodesTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getFallbackStarAccess().getNodesTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getParallelAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__NodesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParallelAccess().getNodesTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getParallelAccess().getNodesTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getSwitchAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__NodesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchAccess().getNodesTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getSwitchAccess().getNodesTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForceSuccessAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getForceSuccessAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceSuccess__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForceSuccessAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getForceSuccessAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForceFailureAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getForceFailureAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForceFailure__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForceFailureAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getForceFailureAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getRepeatAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getRepeatAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInverterAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getInverterAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inverter__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInverterAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getInverterAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getTimeoutAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getTimeoutAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetryUntilSuccessAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getRetryUntilSuccessAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RetryUntilSuccess__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRetryUntilSuccessAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getRetryUntilSuccessAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlackboardCheckDoubleAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getBlackboardCheckDoubleAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckDouble__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlackboardCheckDoubleAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getBlackboardCheckDoubleAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlackboardCheckIntAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getBlackboardCheckIntAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckInt__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlackboardCheckIntAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getBlackboardCheckIntAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlackboardCheckStringAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getBlackboardCheckStringAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlackboardCheckString__NodeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlackboardCheckStringAccess().getNodeTreeNodeParserRuleCall_5_0()); }
		ruleTreeNode
		{ after(grammarAccess.getBlackboardCheckStringAccess().getNodeTreeNodeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getConditionAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysSuccess__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlwaysSuccessAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getAlwaysSuccessAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AlwaysFailure__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlwaysFailureAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getAlwaysFailureAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetBlackboard__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetBlackboardAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getSetBlackboardAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__AttributesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getAttributesAttributeParserRuleCall_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getActionAccess().getAttributesAttributeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TreeNodesModel__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeNodesModelAccess().getContentEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getTreeNodesModelAccess().getContentEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
